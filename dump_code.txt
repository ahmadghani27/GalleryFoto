<x-guest-layout>
    <!-- Session Status -->
    <x-auth-session-status class="mb-4" :status="session('status')" />

    <form method="POST" action="{{ route('login') }}">
        @csrf

        <!-- Email Address -->
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus autocomplete="username" />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <!-- Password -->
        <div class="mt-4">
            <x-input-label for="password" :value="__('Password')" />

            <x-text-input id="password" class="block mt-1 w-full"
                            type="password"
                            name="password"
                            required autocomplete="current-password" />

            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <!-- Remember Me -->
        <div class="block mt-4">
            <label for="remember_me" class="inline-flex items-center">
                <input id="remember_me" type="checkbox" class="rounded border-gray-300 text-indigo-600 shadow-sm focus:ring-indigo-500" name="remember">
                <span class="ms-2 text-sm text-gray-600">{{ __('Remember me') }}</span>
            </label>
        </div>

        <div class="flex items-center justify-end mt-4">
            @if (Route::has('password.request'))
                <a class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" href="{{ route('password.request') }}">
                    {{ __('Forgot your password?') }}
                </a>
            @endif

            <x-primary-button class="ms-3">
                {{ __('Log in') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>

@extends('layouts.sidebar')

@section('content')
<div class="flex flex-col gap-4 px-[5%]">
    <!-- Elemen Sticky untuk Pencarian dan Filter -->
    <div class="sticky top-0 z-40 bg-gray-100 px-[5%] py-4 md:shadow-md transition-shadow duration-200">
        <div class="w-full h-16 px-5 bg-white rounded-[999px] outline outline-1 outline-offset-[-1px] outline-black/10 flex justify-between items-center">
            <div class="flex justify-start items-center gap-4 w-full mr-3.5">
                <div class="w-6 h-6 bg-zinc-300"></div>
                <input
                    type="text"
                    name="search"
                    value="{{ request('search') ?? '' }}"
                    class="text-neutral-900 text-base font-normal font-inter w-full border-none outline-none bg-transparent focus:outline-none focus:ring-0"
                    placeholder="Cari foto..."
                />
            </div>
            <div class="w-3.5 h-3.5 bg-zinc-900"></div>
        </div>
        <!-- Bagian Filter dan Informasi -->
        <div class="w-full flex justify-between items-center mt-3">
            <div class="text-black text-xl font-normal font-inter">Menampilkan {{ $photos->count() }} Foto</div>
            <div class="flex justify-end items-center gap-5">
                @if(auth()->check() && auth()->user()->role === 'admin')
                    <div class="h-14 px-5 py-5 bg-white rounded-2xl outline outline-1 outline-offset-[-1px] outline-black/10 flex justify-start items-center gap-2">
                        <div class="w-5 h-4 bg-neutral-900"></div>
                        <div class="text-neutral-900 text-base font-normal font-inter">Sort (Terbaru)</div>
                    </div>
                @endif
                <div class="p-4 bg-neutral-900 rounded-[999px] flex justify-start items-center gap-2.5">
                    <div class="w-3.5 h-3.5 bg-white"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Judul Pencarian -->
    @if(request('search'))
        <div class="self-stretch justify-start text-black text-xl font-medium font-inter">“{{ request('search') }}”</div>
    @endif

    <!-- Grid Gambar -->
    <div class="grid grid-cols-[repeat(auto-fill,minmax(240px,1fr))] gap-3 justify-items-start max-w-full md:justify-items-stretch">
        @forelse($photos as $photo)
            <div class="aspect-square rounded-md overflow-hidden">
                <img src="{{ asset($photo->path) }}" alt="{{ $photo->title ?? 'Photo' }}" class="w-full h-full object-cover min-w-[240px] max-w-[400px]">
            </div>
        @empty
            <div class="col-span-full text-center text-gray-500 text-lg">Tidak ada foto ditemukan.</div>
        @endforelse
    </div>
</div>
@endsection


<!-- dibawah ini jika sudah dihubungkan dengan database -->
    <!-- <div class="grid grid-cols-[repeat(auto-fill,minmax(240px,1fr))] gap-3 justify-items-start max-w-full md:justify-items-stretch">
        @foreach($photos as $photo)
        <div class="aspect-square rounded-md overflow-hidden">
            <img src="{{ asset($photo->path) }}" alt="{{ $photo->alt_text }}" class="w-full h-full object-cover min-w-[240px] max-w-[400px]">
        </div>
        @endforeach
    </div> -->


    <?php
// database/migrations/YYYY_MM_DD_HHMMSS_create_users_table.php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateUsersTable extends Migration
{
    public function up()
    {
        Schema::create('users', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->string('username')->unique();
            $table->string('password');
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('users');
    }
}

<?php
// database/migrations/YYYY_MM_DD_HHMMSS_create_folders_table.php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateFoldersTable extends Migration
{
    public function up()
    {
        Schema::create('folders', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('user_id');
            $table->string('name');
            $table->string('folder_key')->unique();
            $table->timestamps();
            $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade');
            $table->index('name');
            $table->index('folder_key');
        });
    }

    public function down()
    {
        Schema::dropIfExists('folders');
    }
}

<?php
// database/migrations/YYYY_MM_DD_HHMMSS_create_archives_table.php
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateArchivesTable extends Migration
{
    public function up()
    {
        Schema::create('archives', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('user_id');
            $table->unsignedBigInteger('photo_id');
            $table->string('photo_table');
            $table->string('sandi');
            $table->timestamps();
            $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade');
        });
    }

    public function down()
    {
        Schema::dropIfExists('archives');
    }
}

<?php
// app/Observers/UserObserver.php
namespace App\Observers;

use App\Models\User;
use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;

class UserObserver
{
    public function created(User $user)
    {
        // Create a photos_{username} table for the new user
        $tableName = 'photos_' . strtolower(str_replace(' ', '_', $user->username));
        Schema::create($tableName, function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('folder_id')->nullable();
            $table->string('title');
            $table->string('url');
            $table->unsignedBigInteger('size'); // Size in bytes
            $table->boolean('is_favorite')->default(false);
            $table->timestamps();
            $table->foreign('folder_id')->references('id')->on('folders')->onDelete('set null');
            $table->index('title');
        });
    }

    public function deleting(User $user)
    {
        // Drop the photos_{username} table when the user is deleted
        $tableName = 'photos_' . strtolower(str_replace(' ', '_', $user->username));
        Schema::dropIfExists($tableName);
    }
}

<?php
// app/Providers/AppServiceProvider.php (partial, to register the observer)
namespace App\Providers;

use App\Models\User;
use App\Observers\UserObserver;
use Illuminate\Support\ServiceProvider;

class AppServiceProvider extends ServiceProvider
{
    public function boot()
    {
        User::observe(UserObserver::class);
    }
}


<x-modal name="upload-photo" :show="$errors->has('username')" :closeOnOutsideClick="true" class="max-w-[1080px] w-full" maxWidth="3xl">
    <form action="" method="POST" enctype="multipart/form-data" class="px-8 py-8 bg-white rounded-2xl outline outline-1 outline-offset-[-1px] outline-black/10 flex flex-col justify-start items-start gap-4 overflow-y-auto">
        @csrf

        <!-- Header Section -->
        <div class="self-stretch flex justify-between items-center gap-5">
            <div class="flex-1 flex flex-col justify-start items-start gap-2">
                <h2 class="self-stretch text-black text-xl font-semibold">Upload Foto</h2>
                <p class="self-stretch text-black/70 text-base font-normal">Simpan momen terbaik anda</p>
            </div>
            <button type="button" @click="$dispatch('close-modal', 'upload-photo')" class="p-1.5 bg-zinc-100 rounded-full flex justify-start items-center gap-2.5">
                <span class="material-symbols-outlined">close</span>
            </button>
        </div>

        <!-- Tabs Section -->
        <div class="self-stretch flex justify-start items-end flex-wrap content-end">
            <div class="self-stretch flex justify-start items-end gap-7 flex-wrap content-end">
                <div class="w-28 flex flex-col justify-start items-start gap-2">
                    <span class="self-stretch text-neutral-900 text-base font-semibold" onclick="window.dispatchEvent(new CustomEvent('open-modal', { detail: 'upload-photo' }))">Single upload</span>
                    <div class="self-stretch h-1.5 bg-neutral-900 rounded-tl-[99px] rounded-tr-[99px] bg-black"></div>
                </div>
                <div class="flex flex-col justify-start items-start gap-2">
                    <span class="text-neutral-900 text-base font-normal" onclick="window.dispatchEvent(new CustomEvent('open-modal', { detail: 'mass-upload' }))">Multiple upload</span>
                    <div class="self-stretch h-1.5 rounded-tl-[99px] rounded-tr-[99px]"></div>
                </div>
            </div>
            <div class="w-full h-[1.5px] bg-zinc-300"></div>

        </div>

        <!-- File Upload Section -->
        <div class="self-stretch flex flex-col justify-start items-start gap-6">
            <!-- File Input -->
            <div class="self-stretch flex flex-col justify-start items-start gap-3">
                <label class="self-stretch text-black text-base font-medium">Foto anda*</label>
                <div class="self-stretch p-5 rounded-2xl outline outline-1 outline-offset-[-1px] outline-black/5 flex justify-between items-center">
                    <div class="w-72 flex flex-col justify-start items-start gap-3">
                        <div class="self-stretch flex justify-start items-center gap-3">
                            <span class="material-symbols-outlined">shift_lock</span>
                            <span class="text-black text-base font-normal">Drag and drop files here or upload</span>
                        </div>
                        <p class="self-stretch text-black/70 text-sm font-normal">Tipe file yang diterima: jpg, jpeg, png</p>
                    </div>
                    <label class="w-48 h-14 px-2.5 py-5 rounded-2xl outline outline-[1.5px] outline-offset-[-1.5px] hover:text-white hover:bg-black outline-neutral-900 flex justify-center items-center gap-2.5 cursor-pointer transition-all duration-100 hover:bg-neutral-900 hover:text-white">
                        <span class="text-neutral-900 text-base font-bold hover:text-white w-48 h-14 flex justify-center items-center">Upload</span>
                        <input type="file" name="photo" id="photo-upload" accept=".jpg,.jpeg,.png" class="hidden" @change="handleFileUpload">
                    </label>
                </div>
                @error('photo')
                <span class="text-red-500 text-sm">{{ $message }}</span>
                @enderror
            </div>

            <!-- Preview Section -->
            <div class="self-stretch flex flex-col justify-start items-start gap-3">
                <label class="self-stretch text-black text-base font-medium">Preview foto</label>
                <div class="self-stretch bg-zinc-100 rounded-2xl relative flex items-center justify-center overflow-hidden">
                    <div id="preview-container" class="w-full h-full flex justify-center items-center"></div>
                    <div class="absolute w-40 h-40 border-2 border-dashed border-black/50 rounded-lg pointer-events-none"></div>
                </div>
            </div>

            <!-- Title Input -->
            <div class="self-stretch flex flex-col justify-start items-start gap-3">
                <label class="self-stretch text-black text-base font-medium">Judul Foto*</label>
                <div class="self-stretch h-14 px-5 py-5 rounded-2xl outline outline-1 outline-offset-[-1px] outline-black/10 flex items-center gap-4">
                    <span class="material-symbols-outlined">match_case</span>
                    <input type="text" name="title" class="w-full border-none outline-none bg-transparent focus:outline-none focus:ring-0 placeholder:text-black/50" placeholder="Masukkan judul foto disini" value="{{ old('title') }}">
                </div>
                @error('title')
                <span class="text-red-500 text-sm">{{ $message }}</span>
                @enderror
            </div>

            <!-- Info -->
            <div class="self-stretch">
                <span class="text-black/50 text-base font-normal">*Foto akan disimpan di </span>
                <span class="text-black/50 text-base font-semibold">global</span>
            </div>
        </div>

        <!-- Submit Button -->
        <div class="self-stretch flex justify-start items-start gap-2">
            <button type="submit" class="flex-1 h-14 px-2.5 py-5 bg-neutral-900 rounded-2xl flex justify-center items-center gap-2.5 transition-all duration-100 bg-black hover:bg-white hover:text-neutral-900 hover:outline hover:outline-[1.5px] hover:outline-neutral-900">
                <span class="text-white flex-1 h-14 flex justify-center items-center text-base font-bold hover:text-black">Upload</span>
            </button>
        </div>
    </form>

    <!-- JavaScript for File Upload and Preview -->
    <script>
        function handleFileUpload(event) {
            const files = event.target.files;
            const previewContainer = document.getElementById('preview-container');
            previewContainer.innerHTML = ''; // Clear previous previews

            Array.from(files).forEach(file => {
                if (['image/jpeg', 'image/png'].includes(file.type)) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        const img = new Image();
                        img.onload = function() {
                            const container = document.createElement('div');
                            container.className = 'flex justify-center items-center h-full';

                            const imgElement = document.createElement('img');
                            imgElement.src = e.target.result;

                            // Check if image is landscape (width > height)
                            if (this.width > this.height) {
                                imgElement.className = 'max-h-40 w-auto';
                            } else {
                                imgElement.className = 'h-auto max-w-40';
                            }

                            container.appendChild(imgElement);
                            previewContainer.appendChild(container);
                        };
                        img.src = e.target.result;
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        // Drag and Drop Functionality
        const dropZone = document.querySelector('.p-5.rounded-2xl');
        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('bg-gray-200');
        });
        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('bg-gray-200');
        });
        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('bg-gray-200');
            const files = e.dataTransfer.files;
            const input = document.getElementById('photo-upload');
            input.files = files;
            handleFileUpload({
                target: {
                    files
                }
            });
        });
    </script>
</x-modal>